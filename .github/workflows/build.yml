name: Build IRC Server

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        compiler: [g++, clang++]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang make
        
    - name: Set compiler
      run: |
        echo "CC=${{ matrix.compiler }}" >> $GITHUB_ENV
        
    - name: Build project
      run: |
        make clean
        make CC=${{ matrix.compiler }}
        
    - name: Check executable
      run: |
        ls -la ircserv
        file ircserv
        ldd ircserv || true
        
    - name: Basic functionality test
      run: |
        # Test if the server starts with correct arguments
        timeout 2s ./ircserv 6667 testpass || true
        
    - name: Test error handling
      run: |
        # Test with wrong number of arguments
        ./ircserv 2>&1 | grep -i "argument" || exit 1
        
    - name: Clean build artifacts
      run: make fclean
      
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install cppcheck
      run: |
        sudo apt-get update
        sudo apt-get install -y cppcheck
        
    - name: Run static analysis
      run: |
        cppcheck --enable=all --std=c++98 --error-exitcode=1 \
          --suppress=missingIncludeSystem \
          --suppress=unusedFunction \
          --suppress=noExplicitConstructor \
          *.cpp *.hpp || true
          
    - name: Check for memory leaks (basic)
      run: |
        # Look for common memory leak patterns
        grep -n "new\|malloc" *.cpp || true
        grep -n "delete\|free" *.cpp || true
        
  compatibility:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Test C++98 compatibility
      run: |
        sudo apt-get update
        sudo apt-get install -y g++
        
        # Compile with strict C++98 standard
        g++ -std=c++98 -Wall -Wextra -Werror -pedantic -c *.cpp
        
    - name: Build with different optimization levels
      run: |
        make clean
        make CFLAGS="-Wall -Wextra -Werror -std=c++98 -O0"
        make clean
        make CFLAGS="-Wall -Wextra -Werror -std=c++98 -O2"
        make clean
        make CFLAGS="-Wall -Wextra -Werror -std=c++98 -Os"
        
  multi-platform:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-20.04]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential make
        
    - name: Build on ${{ matrix.os }}
      run: |
        make clean
        make
        
    - name: Test basic server startup
      run: |
        # Test server can be started and stopped
        timeout 3s ./ircserv 6667 testpass &
        SERVER_PID=$!
        sleep 1
        kill $SERVER_PID 2>/dev/null || true
        wait $SERVER_PID 2>/dev/null || true
        
  documentation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check README exists
      run: |
        test -f README.md
        
    - name: Validate Makefile
      run: |
        make -n clean
        make -n all
        make -n fclean
        make -n re
        
    - name: Check source file consistency
      run: |
        # Verify all .cpp files are included in Makefile
        echo "Checking if all source files are in Makefile..."
        for file in *.cpp; do
          if ! grep -q "$file" Makefile; then
            echo "Warning: $file not found in Makefile"
          fi
        done
